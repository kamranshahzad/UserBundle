{% extends themes %}


{% block body %}

    <style type="text/css">
        .grid {
            font-size: 14px;
        }
    </style>

<!-- breadcrumb -->
<ol class="breadcrumb">
		<li><a href="{{path('front_index')}}">Home</a></li>
		<li class="active">Users</li>
</ol>
<!-- @breadcrumb -->

<!-- headings-->
<div class="section-header">
	<h3 class="text-standard"><i class="fa fa-fw fa-arrow-circle-right text-gray-light"></i> User Management <small> You can add/remove/modify users </small></h3>
</div>
<!-- @headings-->

<br/>

<!--#buttons -->
<a href='{{ path('user_add') }}' class="btn btn-info">Add User</a>&nbsp;&nbsp;
<a href='{{ path('user_roles_add') }}' class="btn btn-info">Add Role</a>
<!--@buttons-->

    <br/>
    <br/>
    {% for flashMessage in app.session.flashbag.get('notice') %}
        <div class="alert alert-success" role="alert">
            {{ flashMessage }}
        </div>
    {% endfor %}
    <br/>

    <div ng-app="directoryApp" >

    <div class="gridContainer" ng-controller="DemoCtrl">

        <table ng-table="tableParams" show-filter="true" class="table ng-table-responsive table-bordered">
            <tr ng-repeat="user in $data" ng-class-odd="odd" ng-class-even="even">
                <td data-title="'Firstname'" sortable="'firstname'" filter="{ 'firstname': 'text' }">
                    {[user.firstname]}
                </td>
                <td data-title="'Lastname'" sortable="'lastname'" filter="{ 'lastname': 'text' }" >
                    {[user.lastname]}
                </td>
                <td data-title="'Username'" sortable="'username'" filter="{ 'username': 'text' }">
                    {[user.username]}
                </td>
                <td data-title="'Email'" sortable="'email'" filter="{ 'email': 'text' }" >
                    {[user.email]}
                </td>
                <td data-title="'Active?'" sortable="'isactive'" align="center" >
                    <span class="label label-sm label-info">{[user.isactive]} </span>
                </td>
                <td data-title="'Actions'" width="200">
                    <a href="#" class="btn btn-default btn-xs">
                        <i class="fa fa-align-left"></i>&nbsp;View
                    </a>
                    <a href="edit/{[user.id]}" class="btn btn-default btn-xs">
                        <i class="fa fa-edit"></i>&nbsp;Edit
                    </a>
                    <a href="remove/{[user.id]}" onclick="return confirm('Are you sure you want to delete this user?');" class="btn btn-default btn-xs">
                        <i class="fa fa-times"></i>&nbsp;Remove
                    </a>
                </td>
            </tr>
        </table>

        </div><!--directoryApp-->

        <script>
            function modifyUsers(id){
                console.log('Output:'+id);
            }
            var app = angular.module('directoryApp', ['ngTable','ngResource'])
                    .config(function($interpolateProvider) {
                        $interpolateProvider.startSymbol('{[').endSymbol(']}');
                    })
                    .controller('DemoCtrl', function($scope, $resource , $filter, $q , ngTableParams) {
                        var serviceUrl = Routing.generate('api.get_users');
                        var all_users = $resource(serviceUrl);

                        $scope.modifyUsers = function(id){
                            console.log("Result:"+id);
                        }

                        $scope.tableParams = new ngTableParams({
                            page: 1,            // show first page
                            count: 10
                        }, {
                            total: 0,
                            getData: function($defer, params) {
                                all_users.query(function(data) {
                                    /*var orderedData = params.filter() ?
                                            $filter('filter')(data, params.filter()) :
                                            data;
                                    $scope.users = orderedData.slice((params.page() - 1) * params.count(), params.page() * params.count());
                                    params.total(orderedData.length); // set total for recalc pagination
                                    $defer.resolve($scope.users);*/

                                    /*
                                    var orderedData = params.sorting() ?
                                            $filter('orderBy')(data, params.orderBy()) :
                                            data;
                                    $defer.resolve(orderedData.slice((params.page() - 1) * params.count(), params.page() * params.count()));
                                    */

                                    var filteredData = params.filter() ?
                                            $filter('filter')(data, params.filter()) :
                                            data;
                                    var orderedData = params.sorting() ?
                                            $filter('orderBy')(filteredData, params.orderBy()) :
                                            data;

                                    params.total(orderedData.length); // set total for recalc pagination
                                    $defer.resolve(orderedData.slice((params.page() - 1) * params.count(), params.page() * params.count()));

                                });
                            }
                        });

                    })
        </script>

    </div>

{% endblock %}
